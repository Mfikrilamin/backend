scheme: http
hostname: localhost
reverse-proxy-port: 7080
reverse-proxy-uri: ${scheme}://${hostname}:${reverse-proxy-port}
authorization-server-prefix: /auth
issuer: ${reverse-proxy-uri}${authorization-server-prefix}/realms/baeldung
username-claim-json-path: $.preferred_username
authorities-json-path: $.realm_access.roles
resource-server-port: 7084
audience:

server:
  port: ${resource-server-port}
  ssl:
    enabled: false

# spring-addons:
#   issuers:
#     - uri: ${issuer}
#       username-json-path: $.preferred_username
#       claims:
#         - jsonPath: $.realm_access.roles
#         - jsonPath: $.resource_access.*.roles

# spring:
#   security:
#     oauth2:
#       resourceserver:
#         jwt:
#           issuer-uri: ${issuer}

# spring:
#   security:
#     oauth2:
#       resourceserver:
#         opaquetoken:
#           introspection-uri: ${issuer}/protocol/openid-connect/token/introspect
#           client-id: baeldung-bff
#           client-secret: w8DGbCb7LLWYPQVrnP8eVF4DxKeOhBok
com:
  c4-soft:
    springaddons:
      oidc:
        ops:
          - iss: ${issuer}
            username-claim: ${username-claim-json-path}
            authorities:
              - path: ${authorities-json-path}
            aud: ${audience}
        resourceserver:
          permit-all:
            - /me
            - /v3/api-docs/**
            - /swagger-ui/**
            - /actuator/health/readiness
            - /actuator/health/liveness

management:
  endpoint:
    health:
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

logging:
  level:
    root: INFO
    org:
      springframework:
        boot: INFO
        security: TRACE
        web: INFO

---
spring:
  config:
    activate:
      on-profile: no-ssl
server:
  ssl:
    enabled: false
scheme: http
